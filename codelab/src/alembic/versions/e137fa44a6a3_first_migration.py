"""First Migration

Revision ID: e137fa44a6a3
Revises: 
Create Date: 2025-03-02 15:05:59.876322

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e137fa44a6a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercisesubmission',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('entry_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('queued', 'executng', 'executed', 'dropped', name='taskstatus'), nullable=False),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('languageimage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('base_image', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('docker_image_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('created', 'building', 'build_succeeded', 'build_failed', 'testing', 'testing_failed', 'scheduled_for_prune', 'scheduled_for_rebuild', 'scheduled_for_deletion', 'available', 'unavailable', 'failed', name='imagestatus'), nullable=False),
    sa.Column('build_logs', sa.JSON(), nullable=True),
    sa.Column('push_logs', sa.JSON(), nullable=True),
    sa.Column('failure_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('test_build', sa.Boolean(), nullable=False),
    sa.Column('file_extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('build_test_file_content', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('build_test_std_in', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('build_test_std_out', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('requires_compilation', sa.Boolean(), nullable=False),
    sa.Column('compile_file_extension', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('compilation_command', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('default_execution_command', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entrypoint_script', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('image_size', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_architecture', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('language_image_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['language_image_id'], ['languageimage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_external_id'), 'session', ['external_id'], unique=True)
    op.create_table('exercise',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_exercise_external_id'), 'exercise', ['external_id'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('docker_container_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_group_external_id'), 'group', ['external_id'], unique=False)
    op.create_table('sessionconfig',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('max_queue_size', sa.Integer(), nullable=False),
    sa.Column('max_number_of_runs', sa.Integer(), nullable=False),
    sa.Column('wall_time_limit', sa.Integer(), nullable=False),
    sa.Column('cpu_time_limit', sa.Integer(), nullable=False),
    sa.Column('memory_limit', sa.Integer(), nullable=False),
    sa.Column('max_processes_and_or_threads', sa.Integer(), nullable=False),
    sa.Column('max_file_size', sa.Integer(), nullable=False),
    sa.Column('max_stdin_size', sa.Integer(), nullable=False),
    sa.Column('enable_network', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('testcase',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('test_input', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exercise_id', 'external_id', name='exercise_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_testcase_external_id'), 'testcase', ['external_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('docker_container_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'external_id', name='session_id_unique_together_with_external_id')
    )
    op.create_index(op.f('ix_user_external_id'), 'user', ['external_id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('celery_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entry_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('status', sa.Enum('queued', 'executng', 'executed', 'dropped', name='taskstatus'), nullable=False),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_index(op.f('ix_user_external_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_testcase_external_id'), table_name='testcase')
    op.drop_table('testcase')
    op.drop_table('sessionconfig')
    op.drop_index(op.f('ix_group_external_id'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_exercise_external_id'), table_name='exercise')
    op.drop_table('exercise')
    op.drop_index(op.f('ix_session_external_id'), table_name='session')
    op.drop_table('session')
    op.drop_table('languageimage')
    op.drop_table('exercisesubmission')
    # ### end Alembic commands ###
